import React, { useState } from 'react';
import { Check, Calendar, Upload, FileText, Shield, ChevronLeft, ChevronRight, User, Users, Briefcase, Clock, Banknote, PlusCircle, LockKeyhole, Heart } from 'lucide-react';
const WidgetDemo = () => {
    const [activeSection, setActiveSection] = useState('demo');
    const [demoStep, setDemoStep] = useState(0);
    const [isCalendarVisible, setIsCalendarVisible] = useState(false);
    // Form data state
    const [formData, setFormData] = useState({
        deceasedFirstName: 'Matti',
        deceasedLastName: 'Virtanen',
        deathDate: '2025-04-15',
        hasChildren: true,
        hasSpouse: true,
        hasWill: false,
        contactFirstName: 'Liisa',
        contactLastName: 'Virtanen',
        contactEmail: 'liisa.virtanen@example.com',
        contactPhone: '+358 40 123 4567',
        documents: ['virkatodistus.pdf']
    });
    // Widget theme styles
    const themes = {
        dark: {
            container: "bg-gray-900 text-white border border-gray-800",
            header: "border-gray-800 bg-gray-900",
            inputs: "bg-gray-800 border border-gray-700 text-white",
            primary: "bg-blue-600 text-white",
            secondary: "bg-gray-800 border border-gray-700 text-white",
            accent: "text-blue-500",
            progressActive: "bg-blue-600 text-white",
            progressInactive: "bg-gray-800 text-gray-400",
            footer: "bg-gray-950 text-gray-400"
        },
        light: {
            container: "bg-white text-gray-800 border border-gray-200 shadow-md",
            header: "border-gray-200 bg-white",
            inputs: "bg-gray-50 border border-gray-300 text-gray-800",
            primary: "bg-blue-600 text-white",
            secondary: "bg-gray-100 border border-gray-300 text-gray-800",
            accent: "text-blue-600",
            progressActive: "bg-blue-600 text-white",
            progressInactive: "bg-gray-200 text-gray-600",
            footer: "bg-gray-100 text-gray-600"
        },
        earthy: {
            container: "bg-amber-50 text-stone-800 border border-amber-200 shadow-md",
            header: "border-amber-200 bg-amber-50",
            inputs: "bg-white border border-amber-200 text-stone-800",
            primary: "bg-amber-700 text-white",
            secondary: "bg-stone-100 border border-amber-200 text-stone-800",
            accent: "text-amber-700",
            progressActive: "bg-amber-700 text-white",
            progressInactive: "bg-stone-200 text-stone-600",
            footer: "bg-stone-100 text-stone-600"
        },
        professional: {
            container: "bg-white text-slate-800 border border-slate-200 shadow-md",
            header: "border-slate-200 bg-slate-50",
            inputs: "bg-white border border-slate-300 text-slate-800",
            primary: "bg-slate-700 text-white",
            secondary: "bg-slate-100 border border-slate-300 text-slate-800",
            accent: "text-slate-700",
            progressActive: "bg-slate-700 text-white",
            progressInactive: "bg-slate-200 text-slate-600",
            footer: "bg-slate-100 text-slate-600"
        }
    };
    const [activeTheme, setActiveTheme] = useState('dark');
    const theme = themes[activeTheme];
    // Render the widget demo based on current step
    const renderWidgetStep = () => {
        switch (demoStep) {
            case 0:
                return (React.createElement("div", { className: "space-y-4" },
                    React.createElement("h3", { className: `text-xl font-semibold mb-4 ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Vainajan tiedot"),
                    React.createElement("div", { className: "grid grid-cols-2 gap-4" },
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Etunimi"),
                            React.createElement("input", { type: "text", value: formData.deceasedFirstName, className: `w-full p-2 rounded-lg ${theme.inputs}`, placeholder: "Etunimi", readOnly: true })),
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Sukunimi"),
                            React.createElement("input", { type: "text", value: formData.deceasedLastName, className: `w-full p-2 rounded-lg ${theme.inputs}`, placeholder: "Sukunimi", readOnly: true }))),
                    React.createElement("div", null,
                        React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Kuolinp\u00E4iv\u00E4"),
                        React.createElement("input", { type: "date", value: formData.deathDate, className: `w-full p-2 rounded-lg ${theme.inputs}`, readOnly: true }))));
            case 1:
                return (React.createElement("div", { className: "space-y-4" },
                    React.createElement("h3", { className: `text-xl font-semibold mb-4 ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Perhetilanne"),
                    React.createElement("div", { className: "mb-4" },
                        React.createElement("p", { className: "block text-sm font-medium mb-2" }, "Oliko vainajalla lapsia?"),
                        React.createElement("div", { className: "flex space-x-4" },
                            React.createElement("button", { className: `flex items-center px-4 py-2 rounded-lg ${formData.hasChildren ? theme.primary : theme.secondary}` },
                                React.createElement("span", null, "Kyll\u00E4"),
                                formData.hasChildren && React.createElement(Check, { className: "ml-2 h-4 w-4" })),
                            React.createElement("button", { className: `flex items-center px-4 py-2 rounded-lg ${!formData.hasChildren ? theme.primary : theme.secondary}` },
                                React.createElement("span", null, "Ei"),
                                !formData.hasChildren && React.createElement(Check, { className: "ml-2 h-4 w-4" })))),
                    React.createElement("div", { className: "mb-4" },
                        React.createElement("p", { className: "block text-sm font-medium mb-2" }, "Oliko vainaja naimisissa?"),
                        React.createElement("div", { className: "flex space-x-4" },
                            React.createElement("button", { className: `flex items-center px-4 py-2 rounded-lg ${formData.hasSpouse ? theme.primary : theme.secondary}` },
                                React.createElement("span", null, "Kyll\u00E4"),
                                formData.hasSpouse && React.createElement(Check, { className: "ml-2 h-4 w-4" })),
                            React.createElement("button", { className: `flex items-center px-4 py-2 rounded-lg ${!formData.hasSpouse ? theme.primary : theme.secondary}` },
                                React.createElement("span", null, "Ei"),
                                !formData.hasSpouse && React.createElement(Check, { className: "ml-2 h-4 w-4" })))),
                    React.createElement("div", { className: "mb-4" },
                        React.createElement("p", { className: "block text-sm font-medium mb-2" }, "Onko testamenttia tiedossa?"),
                        React.createElement("div", { className: "flex space-x-4" },
                            React.createElement("button", { className: `flex items-center px-4 py-2 rounded-lg ${formData.hasWill ? theme.primary : theme.secondary}` },
                                React.createElement("span", null, "Kyll\u00E4"),
                                formData.hasWill && React.createElement(Check, { className: "ml-2 h-4 w-4" })),
                            React.createElement("button", { className: `flex items-center px-4 py-2 rounded-lg ${!formData.hasWill ? theme.primary : theme.secondary}` },
                                React.createElement("span", null, "Ei"),
                                !formData.hasWill && React.createElement(Check, { className: "ml-2 h-4 w-4" }))))));
            case 2:
                return (React.createElement("div", { className: "space-y-4" },
                    React.createElement("h3", { className: `text-xl font-semibold mb-4 ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Yhteystiedot"),
                    React.createElement("div", { className: "grid grid-cols-2 gap-4" },
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Etunimi"),
                            React.createElement("input", { type: "text", value: formData.contactFirstName, className: `w-full p-2 rounded-lg ${theme.inputs}`, placeholder: "Etunimi", readOnly: true })),
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Sukunimi"),
                            React.createElement("input", { type: "text", value: formData.contactLastName, className: `w-full p-2 rounded-lg ${theme.inputs}`, placeholder: "Sukunimi", readOnly: true }))),
                    React.createElement("div", null,
                        React.createElement("label", { className: "block text-sm font-medium mb-1" }, "S\u00E4hk\u00F6posti"),
                        React.createElement("input", { type: "email", value: formData.contactEmail, className: `w-full p-2 rounded-lg ${theme.inputs}`, placeholder: "email@example.com", readOnly: true })),
                    React.createElement("div", null,
                        React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Puhelinnumero"),
                        React.createElement("input", { type: "tel", value: formData.contactPhone, className: `w-full p-2 rounded-lg ${theme.inputs}`, placeholder: "+358 40 123 4567", readOnly: true }))));
            case 3:
                return (React.createElement("div", { className: "space-y-4" },
                    React.createElement("h3", { className: `text-xl font-semibold mb-4 ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Liitteet (valinnainen)"),
                    React.createElement("p", { className: `text-sm ${activeTheme === 'dark' ? 'text-gray-400' : 'text-gray-600'} mb-4` }, "Voit ladata asiakirjoja jo nyt, tai my\u00F6hemmin asiakasportaalissa."),
                    React.createElement("div", { className: `border-2 border-dashed ${activeTheme === 'dark' ? 'border-gray-700' : 'border-gray-300'} rounded-lg p-6 text-center` },
                        React.createElement(Upload, { className: `mx-auto h-12 w-12 ${activeTheme === 'dark' ? 'text-gray-400' : 'text-gray-500'} mb-4` }),
                        React.createElement("p", { className: `text-sm ${activeTheme === 'dark' ? 'text-gray-400' : 'text-gray-600'} mb-2` }, "Ved\u00E4 tiedostot t\u00E4h\u00E4n tai"),
                        React.createElement("label", { className: `inline-block ${theme.primary} px-4 py-2 rounded-lg cursor-pointer` },
                            "Valitse tiedostot",
                            React.createElement("input", { type: "file", multiple: true, className: "hidden" }))),
                    formData.documents.length > 0 && (React.createElement("div", { className: "mt-4" },
                        React.createElement("h4", { className: "font-medium mb-2" }, "Ladatut tiedostot:"),
                        React.createElement("ul", { className: "space-y-2" }, formData.documents.map((file, index) => (React.createElement("li", { key: index, className: `flex items-center justify-between p-2 ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-gray-100'} rounded-lg` },
                            React.createElement("span", { className: "truncate max-w-xs" }, file),
                            React.createElement("button", { className: activeTheme === 'dark' ? 'text-red-400 hover:text-red-300' : 'text-red-600 hover:text-red-500' }, "Poista")))))))));
            case 4:
                return (React.createElement("div", { className: "text-center space-y-6 py-6" },
                    React.createElement("div", { className: `inline-flex items-center justify-center w-20 h-20 ${theme.primary} rounded-full mb-4` },
                        React.createElement(Check, { className: "h-10 w-10 text-white" })),
                    React.createElement("h3", { className: `text-2xl font-bold ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Kiitos tiedoista!"),
                    React.createElement("p", { className: activeTheme === 'dark' ? 'text-gray-400 max-w-md mx-auto' : 'text-gray-600 max-w-md mx-auto' }, "Olemme vastaanottaneet tietosi ja asiantuntijamme k\u00E4sittelee asian mahdollisimman pian."),
                    React.createElement("div", { className: "flex flex-col gap-4 mt-6 max-w-md mx-auto" },
                        React.createElement("button", { className: `w-full ${theme.primary} py-3 px-6 rounded-lg flex items-center justify-center` },
                            React.createElement(LockKeyhole, { className: "mr-2 h-5 w-5" }),
                            "Siirry asiakasportaaliin"),
                        React.createElement("button", { onClick: () => setIsCalendarVisible(true), className: `w-full ${theme.secondary} py-3 px-6 rounded-lg flex items-center justify-center` },
                            React.createElement(Calendar, { className: "mr-2 h-5 w-5" }),
                            "Varaa aika asiantuntijalle"))));
            default:
                return null;
        }
    };
    // Progress Indicator
    const ProgressIndicator = () => (React.createElement("div", { className: "flex items-center justify-between mb-8" }, [0, 1, 2, 3, 4].map((index) => (React.createElement(React.Fragment, { key: index },
        React.createElement("div", { className: "flex flex-col items-center cursor-pointer", onClick: () => setDemoStep(index) },
            React.createElement("div", { className: `w-8 h-8 rounded-full flex items-center justify-center text-sm ${demoStep >= index ? theme.progressActive : theme.progressInactive}` }, index < 4 ? index + 1 : React.createElement(Check, { className: "h-4 w-4" })),
            React.createElement("span", { className: `text-xs mt-1 ${activeTheme === 'dark' ? 'text-gray-400' : 'text-gray-600'}` },
                index === 0 && "Vainajan tiedot",
                index === 1 && "Perhetilanne",
                index === 2 && "Yhteystiedot",
                index === 3 && "Liitteet",
                index === 4 && "Valmis")),
        index < 4 && (React.createElement("div", { className: `h-1 flex-1 ${demoStep > index ? theme.progressActive : theme.progressInactive}` })))))));
    const ClientPortalPreview = () => (React.createElement("div", { className: `w-full max-w-3xl mx-auto rounded-xl overflow-hidden shadow-xl ${theme.container} mb-12` },
        React.createElement("div", { className: `p-6 border-b ${theme.header} flex justify-between items-center` },
            React.createElement("h2", { className: `text-2xl font-bold flex items-center ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` },
                React.createElement(Shield, { className: `mr-2 h-6 w-6 ${theme.accent}` }),
                "Asiakasportaali"),
            React.createElement("div", { className: "flex items-center gap-2" },
                React.createElement("span", { className: `text-sm ${activeTheme === 'dark' ? 'text-gray-400' : 'text-gray-600'}` }, "Liisa Virtanen"),
                React.createElement("div", { className: `w-10 h-10 rounded-full flex items-center justify-center ${theme.primary}` },
                    React.createElement(User, { className: "h-5 w-5 text-white" })))),
        React.createElement("div", { className: "p-6" },
            React.createElement("div", { className: "flex flex-wrap gap-6 mb-8" },
                React.createElement("div", { className: `px-4 py-3 rounded-lg ${theme.primary} flex items-center` },
                    React.createElement("span", null, "Aktiiviset tapaukset: 1")),
                React.createElement("div", { className: `px-4 py-3 rounded-lg ${theme.secondary} flex items-center` },
                    React.createElement(Calendar, { className: "mr-2 h-4 w-4" }),
                    React.createElement("span", null, "Seuraava tapaaminen: 20.5.2025")),
                React.createElement("div", { className: `px-4 py-3 rounded-lg ${theme.secondary} flex items-center` },
                    React.createElement(FileText, { className: "mr-2 h-4 w-4" }),
                    React.createElement("span", null, "Dokumentit: 3/6"))),
            React.createElement("div", { className: `p-4 rounded-lg mb-8 ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-white border border-gray-200'}` },
                React.createElement("h3", { className: `text-lg font-medium mb-3 flex items-center ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` },
                    React.createElement(FileText, { className: `mr-2 h-5 w-5 ${theme.accent}` }),
                    "Matti Virtasen perunkirjoitus"),
                React.createElement("div", { className: `grid md:grid-cols-3 gap-4 text-sm ${activeTheme === 'dark' ? 'text-gray-300' : 'text-gray-800'}` },
                    React.createElement("div", { className: "flex items-center" },
                        React.createElement(Calendar, { className: "mr-2 h-4 w-4" }),
                        React.createElement("span", null, "Aloitettu: 16.5.2025")),
                    React.createElement("div", { className: "flex items-center" },
                        React.createElement(Clock, { className: "mr-2 h-4 w-4" }),
                        React.createElement("span", null, "Tila: Dokumentteja odotetaan")),
                    React.createElement("div", { className: "flex items-center" },
                        React.createElement(FileText, { className: "mr-2 h-4 w-4" }),
                        React.createElement("span", null, "Perukirja valmistuu: 15.6.2025")))),
            React.createElement("div", { className: "grid md:grid-cols-2 gap-6" },
                React.createElement("div", { className: "space-y-4" },
                    React.createElement("h3", { className: `text-lg font-medium ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Puuttuvat dokumentit"),
                    React.createElement("ul", { className: "space-y-2" },
                        React.createElement("li", { className: `p-3 rounded-lg ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-white border border-gray-200'} flex items-center justify-between` },
                            React.createElement("div", { className: "flex items-center" },
                                React.createElement(FileText, { className: "mr-2 h-5 w-5" }),
                                React.createElement("span", null, "Virkatodistus (puoliso)")),
                            React.createElement("button", { className: `${theme.primary} px-3 py-1 rounded text-sm` }, "Lataa")),
                        React.createElement("li", { className: `p-3 rounded-lg ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-white border border-gray-200'} flex items-center justify-between` },
                            React.createElement("div", { className: "flex items-center" },
                                React.createElement(FileText, { className: "mr-2 h-5 w-5" }),
                                React.createElement("span", null, "Pankin saldotodistus")),
                            React.createElement("button", { className: `${theme.primary} px-3 py-1 rounded text-sm` }, "Lataa")),
                        React.createElement("li", { className: `p-3 rounded-lg ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-white border border-gray-200'} flex items-center justify-between` },
                            React.createElement("div", { className: "flex items-center" },
                                React.createElement(FileText, { className: "mr-2 h-5 w-5" }),
                                React.createElement("span", null, "Kiinteist\u00F6verop\u00E4\u00E4t\u00F6s")),
                            React.createElement("button", { className: `${theme.primary} px-3 py-1 rounded text-sm` }, "Lataa")))),
                React.createElement("div", { className: "space-y-4" },
                    React.createElement("h3", { className: `text-lg font-medium ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Tulevat tapahtumat"),
                    React.createElement("div", { className: `p-4 rounded-lg ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-white border border-gray-200'}` },
                        React.createElement("div", { className: "flex items-center justify-between mb-2" },
                            React.createElement("h4", { className: "font-medium" }, "Perukirjan laadinta"),
                            React.createElement("span", { className: "text-sm" }, "20.5.2025 klo 13:00")),
                        React.createElement("p", { className: `text-sm ${activeTheme === 'dark' ? 'text-gray-400' : 'text-gray-600'} mb-3` }, "Tapaaminen toimistollamme perukirjan laatimista varten."),
                        React.createElement("div", { className: "flex space-x-2" },
                            React.createElement("button", { className: `${theme.primary} px-3 py-2 rounded-lg text-sm flex items-center` },
                                React.createElement(Calendar, { className: "mr-2 h-4 w-4" }),
                                "Lis\u00E4\u00E4 kalenteriin"),
                            React.createElement("button", { className: `${theme.secondary} px-3 py-2 rounded-lg text-sm` }, "Siirr\u00E4"))),
                    React.createElement("button", { className: `w-full ${theme.secondary} py-2 rounded-lg flex items-center justify-center` },
                        React.createElement(PlusCircle, { className: "mr-2 h-4 w-4" }),
                        "Varaa uusi aika"))),
            React.createElement("div", { className: "mt-8 text-center" },
                React.createElement("button", { className: `${theme.secondary} px-6 py-2 rounded-lg` }, "N\u00E4yt\u00E4 kaikki tapaukset")))));
    const CalendarBookingDemo = () => (React.createElement("div", { className: `fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50 ${isCalendarVisible ? 'block' : 'hidden'}` },
        React.createElement("div", { className: `${activeTheme === 'dark' ? 'bg-gray-900' : 'bg-white'} rounded-lg w-full max-w-2xl p-6` },
            React.createElement("div", { className: "flex justify-between items-center mb-6" },
                React.createElement("h2", { className: `text-2xl font-bold ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Varaa aika asiantuntijalle"),
                React.createElement("button", { onClick: () => setIsCalendarVisible(false), className: "text-gray-400 hover:text-white" }, "\u2715")),
            React.createElement("div", { className: "mb-6" },
                React.createElement("label", { className: "block text-sm font-medium mb-1" }, "Tapaamisen tyyppi"),
                React.createElement("select", { className: `w-full p-2 rounded-lg ${theme.inputs}` },
                    React.createElement("option", null, "Perunkirjoituksen alkutapaaminen"),
                    React.createElement("option", null, "Testamentin laatiminen"),
                    React.createElement("option", null, "Perinn\u00F6njako"),
                    React.createElement("option", null, "Muu lakiasiointi"))),
            React.createElement("div", { className: "grid md:grid-cols-2 gap-6" },
                React.createElement("div", null,
                    React.createElement("h3", { className: `font-medium mb-3 ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Valitse p\u00E4iv\u00E4"),
                    React.createElement("div", { className: `p-4 rounded-lg ${activeTheme === 'dark' ? 'bg-gray-800' : 'bg-gray-100'}` },
                        React.createElement("div", { className: "flex justify-between items-center mb-4" },
                            React.createElement("button", { className: `${theme.secondary} px-2 py-1 rounded` },
                                React.createElement(ChevronLeft, { className: "h-4 w-4" })),
                            React.createElement("span", { className: "font-medium" }, "Toukokuu 2025"),
                            React.createElement("button", { className: `${theme.secondary} px-2 py-1 rounded` },
                                React.createElement(ChevronRight, { className: "h-4 w-4" }))),
                        React.createElement("div", { className: "grid grid-cols-7 gap-1 text-center mb-2" },
                            React.createElement("span", { className: "text-xs" }, "Ma"),
                            React.createElement("span", { className: "text-xs" }, "Ti"),
                            React.createElement("span", { className: "text-xs" }, "Ke"),
                            React.createElement("span", { className: "text-xs" }, "To"),
                            React.createElement("span", { className: "text-xs" }, "Pe"),
                            React.createElement("span", { className: "text-xs" }, "La"),
                            React.createElement("span", { className: "text-xs" }, "Su")),
                        React.createElement("div", { className: "grid grid-cols-7 gap-1" }, [...Array(31)].map((_, i) => {
                            const day = i + 1;
                            const isSelected = day === 20;
                            const isAvailable = [5, 7, 12, 15, 20, 21, 25, 28].includes(day);
                            return (React.createElement("button", { key: i, className: `p-2 rounded-full ${isSelected ? theme.primary :
                                    isAvailable ? theme.secondary :
                                        'opacity-50 cursor-not-allowed'}`, disabled: !isAvailable }, day));
                        })))),
                React.createElement("div", null,
                    React.createElement("h3", { className: `font-medium mb-3 ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` }, "Valitse aika (20.5.2025)"),
                    React.createElement("div", { className: "grid grid-cols-2 gap-2" }, ["9:00", "10:00", "11:00", "13:00", "14:00", "15:00"].map((time, i) => (React.createElement("button", { key: i, className: `p-2 rounded-lg ${time === "13:00" ? theme.primary : theme.secondary}` }, time)))),
                    React.createElement("div", { className: `mt-6 p-4 border rounded-lg ${theme.secondary.includes('border') ? '' : 'border-gray-300'}` },
                        React.createElement("h4", { className: "font-medium mb-2" }, "Yhteenveto"),
                        React.createElement("p", { className: `text-sm ${activeTheme === 'dark' ? 'text-gray-300' : 'text-gray-800'}` }, "Perunkirjoituksen alkutapaaminen"),
                        React.createElement("p", { className: `text-sm ${activeTheme === 'dark' ? 'text-gray-300' : 'text-gray-800'}` },
                            React.createElement(Calendar, { className: "inline-block mr-1 h-4 w-4" }),
                            " 20.5.2025 klo 13:00")),
                    React.createElement("button", { className: `w-full mt-6 ${theme.primary} py-2 rounded-lg flex items-center justify-center` }, "Vahvista varaus"))))));
    // Business benefits showcase
    const BenefitsSection = () => (React.createElement("div", { className: "py-12" },
        React.createElement("h2", { className: "text-3xl font-bold mb-12 text-center" }, "Miksi asiakkaat valitsevat Lakivuo-ty\u00F6kalun?"),
        React.createElement("div", { className: "grid md:grid-cols-3 gap-8" },
            React.createElement("div", { className: "p-6 rounded-lg bg-gray-900 shadow-lg border border-gray-800" },
                React.createElement("div", { className: "w-12 h-12 rounded-full bg-blue-600 flex items-center justify-center mb-4" },
                    React.createElement(Briefcase, { className: "h-6 w-6 text-white" })),
                React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "Lis\u00E4tuloja automatisoinnilla"),
                React.createElement("p", { className: "text-gray-400" }, "Asiakkaat aloittavat perunkirjoitusprosessin helposti verkkosivullasi ymp\u00E4ri vuorokauden. Kun asiakas t\u00E4ytt\u00E4\u00E4 lomakkeen, h\u00E4n todenn\u00E4k\u00F6isemmin valitsee juuri sinun palvelusi.")),
            React.createElement("div", { className: "p-6 rounded-lg bg-gray-900 shadow-lg border border-gray-800" },
                React.createElement("div", { className: "w-12 h-12 rounded-full bg-green-600 flex items-center justify-center mb-4" },
                    React.createElement(Banknote, { className: "h-6 w-6 text-white" })),
                React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "S\u00E4\u00E4st\u00E4 aikaa ja resursseja"),
                React.createElement("p", { className: "text-gray-400" }, "Asiakkaat tekev\u00E4t osan ty\u00F6st\u00E4 itse - he lataavat dokumentit, varaavat tapaamiset ja t\u00E4ytt\u00E4v\u00E4t perustiedot. Voit palvella enemm\u00E4n asiakkaita samalla henkil\u00F6st\u00F6m\u00E4\u00E4r\u00E4ll\u00E4.")),
            React.createElement("div", { className: "p-6 rounded-lg bg-gray-900 shadow-lg border border-gray-800" },
                React.createElement("div", { className: "w-12 h-12 rounded-full bg-purple-600 flex items-center justify-center mb-4" },
                    React.createElement(Users, { className: "h-6 w-6 text-white" })),
                React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "Parempi asiakaskokemus"),
                React.createElement("p", { className: "text-gray-400" }, "Asiakkaat arvostavat modernia ja selke\u00E4\u00E4 prosessia, jossa he n\u00E4kev\u00E4t edistymisens\u00E4. Turvallinen asiakasportaali rakentaa luottamusta ja v\u00E4hent\u00E4\u00E4 ep\u00E4varmuutta.")))));
    const ThemeShowcase = () => (React.createElement("div", { className: "py-12" },
        React.createElement("h2", { className: "text-3xl font-bold mb-8 text-center" }, "Valitse yrityksellesi sopiva ulkoasu"),
        React.createElement("p", { className: "text-center text-gray-400 max-w-2xl mx-auto mb-12" }, "Lakivuo-widget mukautuu t\u00E4ydellisesti verkkosivustosi ilmeeseen ja br\u00E4ndiin. Valitse sopiva v\u00E4rimaailma tai pyyd\u00E4 oma r\u00E4\u00E4t\u00E4l\u00F6ity teema."),
        React.createElement("div", { className: "flex flex-wrap gap-4 justify-center mb-12" },
            React.createElement("button", { onClick: () => setActiveTheme('dark'), className: `px-4 py-2 rounded-lg ${activeTheme === 'dark' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300'}` }, "Tumma teema"),
            React.createElement("button", { onClick: () => setActiveTheme('light'), className: `px-4 py-2 rounded-lg ${activeTheme === 'light' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300'}` }, "Vaalea teema"),
            React.createElement("button", { onClick: () => setActiveTheme('earthy'), className: `px-4 py-2 rounded-lg ${activeTheme === 'earthy' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300'}` }, "Maanl\u00E4heinen teema"),
            React.createElement("button", { onClick: () => setActiveTheme('professional'), className: `px-4 py-2 rounded-lg ${activeTheme === 'professional' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300'}` }, "Ammattimainen teema"))));
    const ROICalculator = () => {
        const [clientsMonthly, setClientsMonthly] = useState(10);
        const [conversionRate, setConversionRate] = useState(20);
        const [avgValue, setAvgValue] = useState(500);
        const additionalClients = Math.round((clientsMonthly * conversionRate) / 100);
        const monthlyRevenue = additionalClients * avgValue;
        const annualRevenue = monthlyRevenue * 12;
        return (React.createElement("div", { className: "py-12 px-6" },
            React.createElement("h2", { className: "text-3xl font-bold mb-8 text-center" }, "Laske tuottopotentiaali"),
            React.createElement("p", { className: "text-center text-gray-400 max-w-2xl mx-auto mb-12" }, "N\u00E4e kuinka paljon lis\u00E4tuloja Lakivuo voi tuoda yrityksellesi automatisoimalla asiakashankintaa."),
            React.createElement("div", { className: "max-w-4xl mx-auto grid md:grid-cols-2 gap-8" },
                React.createElement("div", { className: "p-6 rounded-lg bg-gray-900 shadow-lg border border-gray-800" },
                    React.createElement("h3", { className: "text-xl font-semibold mb-6" }, "Sy\u00F6t\u00E4 tietosi"),
                    React.createElement("div", { className: "space-y-6" },
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-2" }, "Kuinka monta asiakasta kuukaudessa?"),
                            React.createElement("input", { type: "range", min: "1", max: "50", value: clientsMonthly, onChange: (e) => setClientsMonthly(parseInt(e.target.value)), className: "w-full h-2 bg-blue-200 rounded-lg appearance-none cursor-pointer" }),
                            React.createElement("div", { className: "flex justify-between" },
                                React.createElement("span", { className: "text-sm text-gray-400" }, "1"),
                                React.createElement("span", { className: "text-sm text-gray-400" }, clientsMonthly),
                                React.createElement("span", { className: "text-sm text-gray-400" }, "50"))),
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-2" }, "Konversioprosentin parannus (%)"),
                            React.createElement("input", { type: "range", min: "5", max: "50", value: conversionRate, onChange: (e) => setConversionRate(parseInt(e.target.value)), className: "w-full h-2 bg-blue-200 rounded-lg appearance-none cursor-pointer" }),
                            React.createElement("div", { className: "flex justify-between" },
                                React.createElement("span", { className: "text-sm text-gray-400" }, "5%"),
                                React.createElement("span", { className: "text-sm text-gray-400" },
                                    conversionRate,
                                    "%"),
                                React.createElement("span", { className: "text-sm text-gray-400" }, "50%"))),
                        React.createElement("div", null,
                            React.createElement("label", { className: "block text-sm font-medium mb-2" }, "Keskim\u00E4\u00E4r\u00E4inen tilauksen arvo (\u20AC)"),
                            React.createElement("input", { type: "range", min: "100", max: "2000", step: "100", value: avgValue, onChange: (e) => setAvgValue(parseInt(e.target.value)), className: "w-full h-2 bg-blue-200 rounded-lg appearance-none cursor-pointer" }),
                            React.createElement("div", { className: "flex justify-between" },
                                React.createElement("span", { className: "text-sm text-gray-400" }, "100\u20AC"),
                                React.createElement("span", { className: "text-sm text-gray-400" },
                                    avgValue,
                                    "\u20AC"),
                                React.createElement("span", { className: "text-sm text-gray-400" }, "2000\u20AC"))))),
                React.createElement("div", { className: "p-6 rounded-lg bg-gray-900 shadow-lg border border-gray-800" },
                    React.createElement("h3", { className: "text-xl font-semibold mb-6" }, "Tuottopotentiaali"),
                    React.createElement("div", { className: "space-y-8" },
                        React.createElement("div", { className: "text-center p-4 bg-gray-800 rounded-lg" },
                            React.createElement("p", { className: "text-sm text-gray-400 mb-2" }, "Lis\u00E4asiakkaita kuukaudessa"),
                            React.createElement("p", { className: "text-4xl font-bold text-blue-500" }, additionalClients)),
                        React.createElement("div", { className: "text-center p-4 bg-gray-800 rounded-lg" },
                            React.createElement("p", { className: "text-sm text-gray-400 mb-2" }, "Lis\u00E4tulot kuukaudessa"),
                            React.createElement("p", { className: "text-4xl font-bold text-green-500" },
                                monthlyRevenue,
                                " \u20AC")),
                        React.createElement("div", { className: "text-center p-4 bg-blue-900 rounded-lg" },
                            React.createElement("p", { className: "text-sm text-blue-200 mb-2" }, "Lis\u00E4tulot vuodessa"),
                            React.createElement("p", { className: "text-4xl font-bold text-white" },
                                annualRevenue,
                                " \u20AC")))))));
    };
    // Implementation steps
    const ImplementationSteps = () => (React.createElement("div", { className: "py-12" },
        React.createElement("h2", { className: "text-3xl font-bold mb-8 text-center" }, "K\u00E4ytt\u00F6\u00F6notto on helppoa"),
        React.createElement("div", { className: "max-w-3xl mx-auto" },
            React.createElement("div", { className: "relative" },
                React.createElement("div", { className: "absolute left-6 top-8 bottom-0 w-1 bg-blue-600" }),
                React.createElement("div", { className: "space-y-12" },
                    React.createElement("div", { className: "flex" },
                        React.createElement("div", { className: "w-12 h-12 rounded-full bg-blue-600 flex-shrink-0 flex items-center justify-center z-10" },
                            React.createElement("span", { className: "text-white font-bold" }, "1")),
                        React.createElement("div", { className: "ml-6" },
                            React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "Ota yhteytt\u00E4 ja kerro tarpeistasi"),
                            React.createElement("p", { className: "text-gray-400" }, "Keskustelemme yrityksesi tarpeista ja parhaista tavoista integroida Lakivuo-widget verkkosivustollesi."))),
                    React.createElement("div", { className: "flex" },
                        React.createElement("div", { className: "w-12 h-12 rounded-full bg-blue-600 flex-shrink-0 flex items-center justify-center z-10" },
                            React.createElement("span", { className: "text-white font-bold" }, "2")),
                        React.createElement("div", { className: "ml-6" },
                            React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "R\u00E4\u00E4t\u00E4l\u00F6imme widgetin ilmeeseesi"),
                            React.createElement("p", { className: "text-gray-400" }, "Sovitamme Lakivuo-widgetin yrityksesi br\u00E4ndiin ja verkkosivuston ulkoasuun sopivaksi."))),
                    React.createElement("div", { className: "flex" },
                        React.createElement("div", { className: "w-12 h-12 rounded-full bg-blue-600 flex-shrink-0 flex items-center justify-center z-10" },
                            React.createElement("span", { className: "text-white font-bold" }, "3")),
                        React.createElement("div", { className: "ml-6" },
                            React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "Asennus yhdell\u00E4 koodirivill\u00E4"),
                            React.createElement("p", { className: "text-gray-400" }, "Saat valmiin JavaScript-koodinp\u00E4tk\u00E4n, jonka lis\u00E4\u00E4minen verkkosivustolle vie vain muutaman minuutin."))),
                    React.createElement("div", { className: "flex" },
                        React.createElement("div", { className: "w-12 h-12 rounded-full bg-blue-600 flex-shrink-0 flex items-center justify-center z-10" },
                            React.createElement("span", { className: "text-white font-bold" }, "4")),
                        React.createElement("div", { className: "ml-6" },
                            React.createElement("h3", { className: "text-xl font-semibold mb-2" }, "Aloita lis\u00E4myynti heti"),
                            React.createElement("p", { className: "text-gray-400" }, "Widget on k\u00E4ytt\u00F6valmis heti asennuksen j\u00E4lkeen. Saat ilmoituksen jokaisesta uudesta liidist\u00E4 s\u00E4hk\u00F6postiisi."))))))));
    const CTA = () => (React.createElement("div", { className: "py-16 bg-gradient-to-r from-blue-900 to-purple-900 rounded-xl my-12" },
        React.createElement("div", { className: "max-w-4xl mx-auto text-center px-6" },
            React.createElement("h2", { className: "text-3xl md:text-4xl font-bold mb-6" }, "Ota Lakivuo k\u00E4ytt\u00F6\u00F6n"),
            React.createElement("p", { className: "text-xl text-gray-300 mb-10 max-w-2xl mx-auto" }, "Lis\u00E4\u00E4 konversiota, s\u00E4\u00E4st\u00E4 ty\u00F6tunteja ja tarjoa nykyaikainen asiakaskokemus."),
            React.createElement("div", { className: "flex flex-wrap gap-4 justify-center" },
                React.createElement("a", { href: "#calendly-section-target", className: "px-8 py-3 bg-white text-blue-900 font-semibold rounded-lg hover:bg-gray-100 flex items-center scroll-to" },
                    React.createElement(Calendar, { className: "mr-2 h-5 w-5" }),
                    "Varaa demotapaaminen")))));
    // Navigation tabs
    const Tabs = () => (React.createElement("div", { className: "flex flex-wrap border-b border-gray-800 mb-8" },
        React.createElement("button", { onClick: () => setActiveSection('demo'), className: `px-6 py-3 font-medium ${activeSection === 'demo' ? 'text-blue-500 border-b-2 border-blue-500' : 'text-gray-400'}` }, "Widgetin demo"),
        React.createElement("button", { onClick: () => setActiveSection('portal'), className: `px-6 py-3 font-medium ${activeSection === 'portal' ? 'text-blue-500 border-b-2 border-blue-500' : 'text-gray-400'}` }, "Asiakasportaali"),
        React.createElement("button", { onClick: () => setActiveSection('benefits'), className: `px-6 py-3 font-medium ${activeSection === 'benefits' ? 'text-blue-500 border-b-2 border-blue-500' : 'text-gray-400'}` }, "Hy\u00F6dyt yritykselle")));
    return (React.createElement("section", { className: "widget-demo py-16" },
        React.createElement("div", { className: "section-container" },
            React.createElement("div", { className: "section-title" },
                React.createElement("h2", null, "Tehosta asianajotoimistosi tai hautaustoimistosi perukirjapalvelua"),
                React.createElement("p", null, "Helpota asiakkaitasi, automatisoi rutiinit\u00F6it\u00E4 ja kasvata liiketoimintaasi modernilla ty\u00F6kalulla")),
            React.createElement(Tabs, null),
            activeSection === 'demo' && (React.createElement("div", null,
                React.createElement("div", { className: "mb-12" },
                    React.createElement("p", { className: "text-center mb-8 text-gray-400" }, "Klikkaa vaiheiden kuvakkeita n\u00E4hd\u00E4ksesi koko prosessin tai k\u00E4yt\u00E4 navigointipainikkeita."),
                    React.createElement("div", { className: `w-full max-w-3xl mx-auto rounded-xl overflow-hidden shadow-xl ${theme.container}` },
                        React.createElement("div", { className: `p-6 border-b ${theme.header} flex justify-between items-center` },
                            React.createElement("h2", { className: `text-2xl font-bold flex items-center ${activeTheme !== 'dark' ? 'text-slate-800' : ''}` },
                                React.createElement(FileText, { className: `mr-2 h-6 w-6 ${theme.accent}` }),
                                "Perunkirjoituspalvelu")),
                        React.createElement("div", { className: "p-6" },
                            demoStep < 4 && React.createElement(ProgressIndicator, null),
                            renderWidgetStep(),
                            demoStep < 4 && (React.createElement("div", { className: "flex justify-between mt-8" },
                                demoStep > 0 ? (React.createElement("button", { onClick: () => setDemoStep(prev => Math.max(0, prev - 1)), className: `flex items-center px-4 py-2 ${theme.secondary} rounded-lg` },
                                    React.createElement(ChevronLeft, { className: "mr-1 h-4 w-4" }),
                                    "Takaisin")) : (React.createElement("div", null)),
                                React.createElement("button", { onClick: () => setDemoStep(prev => Math.min(4, prev + 1)), className: `flex items-center px-6 py-2 rounded-lg ${theme.primary}` },
                                    demoStep === 3 ? 'Lähetä' : 'Seuraava',
                                    demoStep === 3 ? React.createElement(Check, { className: "ml-2 h-4 w-4" }) : React.createElement(ChevronRight, { className: "ml-2 h-4 w-4" }))))),
                        React.createElement("div", { className: `px-6 py-4 ${theme.footer} text-sm flex items-center justify-center` },
                            React.createElement(Shield, { className: "mr-2 h-4 w-4" }),
                            "Kaikki tiedot k\u00E4sitell\u00E4\u00E4n luottamuksellisesti ja turvallisesti"))),
                React.createElement(ThemeShowcase, null),
                React.createElement(ImplementationSteps, null),
                React.createElement(ROICalculator, null),
                React.createElement(CTA, null))),
            activeSection === 'portal' && (React.createElement("div", null,
                React.createElement("p", { className: "text-center mb-8 text-gray-400" }, "Asiakasportaalimme tarjoaa turvallisen tavan hallita dokumentteja ja kommunikoida asiakkaiden kanssa."),
                React.createElement(ClientPortalPreview, null),
                React.createElement("div", { className: "max-w-4xl mx-auto bg-gray-900 rounded-lg p-8 border border-gray-800" },
                    React.createElement("h3", { className: "text-2xl font-bold mb-6" }, "Miksi asiakasportaali s\u00E4\u00E4st\u00E4\u00E4 aikaasi?"),
                    React.createElement("div", { className: "grid md:grid-cols-2 gap-6" },
                        React.createElement("div", { className: "flex items-start" },
                            React.createElement("div", { className: "w-10 h-10 rounded-full bg-blue-600 flex-shrink-0 flex items-center justify-center mr-4" },
                                React.createElement(Upload, { className: "h-5 w-5 text-white" })),
                            React.createElement("div", null,
                                React.createElement("h4", { className: "font-semibold mb-2" }, "Helppo dokumenttien hallinta"),
                                React.createElement("p", { className: "text-gray-400" }, "Asiakkaat voivat ladata dokumentteja turvallisesti itse, jolloin sinun ei tarvitse k\u00E4sitell\u00E4 s\u00E4hk\u00F6postiliitteit\u00E4."))),
                        React.createElement("div", { className: "flex items-start" },
                            React.createElement("div", { className: "w-10 h-10 rounded-full bg-green-600 flex-shrink-0 flex items-center justify-center mr-4" },
                                React.createElement(Calendar, { className: "h-5 w-5 text-white" })),
                            React.createElement("div", null,
                                React.createElement("h4", { className: "font-semibold mb-2" }, "Automaattinen aikataulutus"),
                                React.createElement("p", { className: "text-gray-400" }, "Asiakkaat varaavat tapaamiset itse kalenteristasi ilman edestakaisin s\u00E4hk\u00F6postien vaihtoa."))),
                        React.createElement("div", { className: "flex items-start" },
                            React.createElement("div", { className: "w-10 h-10 rounded-full bg-purple-600 flex-shrink-0 flex items-center justify-center mr-4" },
                                React.createElement(LockKeyhole, { className: "h-5 w-5 text-white" })),
                            React.createElement("div", null,
                                React.createElement("h4", { className: "font-semibold mb-2" }, "Tietoturvallinen viestint\u00E4"),
                                React.createElement("p", { className: "text-gray-400" }, "Kaikki arkaluontoiset keskustelut k\u00E4yd\u00E4\u00E4n suojatussa ymp\u00E4rist\u00F6ss\u00E4, ei s\u00E4hk\u00F6postissa."))),
                        React.createElement("div", { className: "flex items-start" },
                            React.createElement("div", { className: "w-10 h-10 rounded-full bg-red-600 flex-shrink-0 flex items-center justify-center mr-4" },
                                React.createElement(Heart, { className: "h-5 w-5 text-white" })),
                            React.createElement("div", null,
                                React.createElement("h4", { className: "font-semibold mb-2" }, "Modernimpi asiakaskokemus"),
                                React.createElement("p", { className: "text-gray-400" }, "Tarjoa nykyaikaista palvelua, joka erottuu kilpailijoista ja rakentaa luottamusta."))))))),
            activeSection === 'benefits' && (React.createElement("div", null,
                React.createElement(BenefitsSection, null),
                React.createElement("div", { className: "py-12" },
                    React.createElement("h3", { className: "text-2xl font-bold mb-8 text-center" }, "Asiakkaat maksavat verkkosivullasi - sin\u00E4 s\u00E4\u00E4st\u00E4t ty\u00F6tunneissa"),
                    React.createElement("div", { className: "max-w-4xl mx-auto grid md:grid-cols-2 gap-8" },
                        React.createElement("div", { className: "p-6 bg-gray-900 rounded-lg border border-gray-800" },
                            React.createElement("h4", { className: "font-semibold text-xl mb-4" }, "Perinteinen prosessi:"),
                            React.createElement("ul", { className: "space-y-4" },
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-gray-800 flex items-center justify-center mr-3 mt-1" }, "1"),
                                    React.createElement("p", { className: "text-gray-400" }, "Asiakas soittaa tai l\u00E4hett\u00E4\u00E4 s\u00E4hk\u00F6postia ja kyselee hintoja")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-gray-800 flex items-center justify-center mr-3 mt-1" }, "2"),
                                    React.createElement("p", { className: "text-gray-400" }, "Tarjoat tietoa palveluistasi ja yrit\u00E4t varata tapaamisen")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-gray-800 flex items-center justify-center mr-3 mt-1" }, "3"),
                                    React.createElement("p", { className: "text-gray-400" }, "Asiakas vertailee useita palveluntarjoajia")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-gray-800 flex items-center justify-center mr-3 mt-1" }, "4"),
                                    React.createElement("p", { className: "text-gray-400" }, "Saatat menett\u00E4\u00E4 asiakkaan kilpailijalle")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-gray-800 flex items-center justify-center mr-3 mt-1" }, "5"),
                                    React.createElement("p", { className: "text-gray-400" }, "Vaaditaan useita puheluita dokumenttien ker\u00E4\u00E4miseksi")))),
                        React.createElement("div", { className: "p-6 bg-blue-900 rounded-lg border border-blue-700" },
                            React.createElement("h4", { className: "font-semibold text-xl mb-4" }, "Lakivuo-widget:"),
                            React.createElement("ul", { className: "space-y-4" },
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-blue-800 flex items-center justify-center mr-3 mt-1" }, "1"),
                                    React.createElement("p", { className: "text-blue-200" }, "Asiakas l\u00F6yt\u00E4\u00E4 widgetin verkkosivultasi ja aloittaa prosessin heti")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-blue-800 flex items-center justify-center mr-3 mt-1" }, "2"),
                                    React.createElement("p", { className: "text-blue-200" }, "Asiakas t\u00E4ytt\u00E4\u00E4 tiedot ja sitoutuu juuri sinun palveluusi")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-blue-800 flex items-center justify-center mr-3 mt-1" }, "3"),
                                    React.createElement("p", { className: "text-blue-200" }, "Asiakas lataa tarvittavat dokumentit itse ja varaa tapaamisen")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-blue-800 flex items-center justify-center mr-3 mt-1" }, "4"),
                                    React.createElement("p", { className: "text-blue-200" }, "Saat ilmoituksen valmiiksi kvalifioidusta liidist\u00E4")),
                                React.createElement("li", { className: "flex items-start" },
                                    React.createElement("span", { className: "w-6 h-6 rounded-full bg-blue-800 flex items-center justify-center mr-3 mt-1" }, "5"),
                                    React.createElement("p", { className: "text-blue-200" }, "Voit keskitty\u00E4 arvoa tuottavaan asiantuntijaty\u00F6h\u00F6n"))))))))),
        React.createElement(CalendarBookingDemo, null)));
};
export default WidgetDemo;
